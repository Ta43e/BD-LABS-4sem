USE UNIVER
--------------------------------------------------------------------------------------
SELECT AUDITORIUM.AUDITORIUM_TYPE,
MAX(AUDITORIUM.AUDITORIUM_CAPACITY) [Максимальная вместительность],
MIN(AUDITORIUM.AUDITORIUM_CAPACITY)[Минимальная вместительность],
AVG(AUDITORIUM.AUDITORIUM_CAPACITY) [Средняя вместительность],
Count(AUDITORIUM.AUDITORIUM_CAPACITY) [Count],
SUM(AUDITORIUM.AUDITORIUM_CAPACITY) [Общее кол-во мест]
FROM AUDITORIUM JOIN AUDITORIUM_TYPE
	ON AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE 
	GROUP BY AUDITORIUM.AUDITORIUM_TYPE
--------------------------------------------------------------------------------------
SELECT AUDITORIUM.AUDITORIUM_TYPE,
MAX(AUDITORIUM.AUDITORIUM_CAPACITY) [Максимальная вместительность],
MIN(AUDITORIUM.AUDITORIUM_CAPACITY)[Минимальная вместительность],
AVG(AUDITORIUM.AUDITORIUM_CAPACITY) [Средняя вместительность],
Count(AUDITORIUM.AUDITORIUM_CAPACITY) [Count],
SUM(AUDITORIUM.AUDITORIUM_CAPACITY) [Общее кол-во мест]
FROM AUDITORIUM JOIN AUDITORIUM_TYPE
	ON AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE 
	GROUP BY AUDITORIUM.AUDITORIUM_TYPE
--------------------------------------------------------------------------------------
SELECT *
	FROM (SELECT CASE WHEN PROGRESS.NOTE BETWEEN 1 AND 3 THEN 'NOTE < 4'
		  WHEN PROGRESS.NOTE BETWEEN 4 AND 7 THEN 'NOTE ОТ 4 - 7'
		  ELSE 'NOTE >7'
		  END [Диапазон оценок], COUNT(*)[Кол-во]
	FROM PROGRESS GROUP BY CASE 
		WHEN PROGRESS.NOTE BETWEEN 1 AND 3 THEN 'NOTE < 4'
		  WHEN PROGRESS.NOTE BETWEEN 4 AND 7 THEN 'NOTE ОТ 4 - 7'
		  ELSE 'NOTE >7'
		  END) AS T
			ORDER BY CASE [Диапазон оценок]
			WHEN 'NOTE < 4' THEN 1
			WHEN 'NOTE ОТ 4 - 7' THEN 2
		    WHEN 'NOTE >7' THEN 3
			ELSE 4
			END
--------------------------------------------------------------------------------------
SELECT FACULTY.FACULTY, GROUPS.PROFESSION, 2014 - GROUPS.YEAR_FIRST [КУРС],
	ROUND(AVG(CAST(NOTE AS FLOAT(4))), 2)[Средняя оценка]
	FROM FACULTY JOIN GROUPS
	 ON FACULTY.FACULTY = GROUPS.FACULTY
	  JOIN STUDENT 
		ON STUDENT.IDGROUP = GROUPS.IDGROUP
			JOIN PROGRESS
				ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
	GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.YEAR_FIRST
	ORDER BY [Средняя оценка] DESC
--------------------------------------------------------------------------------------
SELECT FACULTY.FACULTY, GROUPS.PROFESSION, 2014 - GROUPS.YEAR_FIRST [КУРС], PROGRESS.SUBJECT,
	ROUND(AVG(CAST(NOTE AS FLOAT(4))), 2)[Средняя оценка]
	FROM FACULTY JOIN GROUPS
	 ON FACULTY.FACULTY = GROUPS.FACULTY
	  JOIN STUDENT 
		ON STUDENT.IDGROUP = GROUPS.IDGROUP
			JOIN PROGRESS
				ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
	WHERE PROGRESS.SUBJECT = 'БД' OR PROGRESS.SUBJECT = 'ОАиП'
	GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.YEAR_FIRST, PROGRESS.SUBJECT
	ORDER BY [Средняя оценка] DESC
--------------------------------------------------------------------------------------
SELECT FACULTY.FACULTY, GROUPS.PROFESSION, 2014 - GROUPS.YEAR_FIRST [КУРС], PROGRESS.SUBJECT,
	ROUND(AVG(CAST(NOTE AS FLOAT(4))), 2)[Средняя оценка]
	FROM FACULTY JOIN GROUPS
	 ON FACULTY.FACULTY = GROUPS.FACULTY
	  JOIN STUDENT 
		ON STUDENT.IDGROUP = GROUPS.IDGROUP
			JOIN PROGRESS
				ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
	WHERE FACULTY.FACULTY = 'ИТ'
	GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, GROUPS.YEAR_FIRST, PROGRESS.SUBJECT
	ORDER BY [Средняя оценка] DESC
--------------------------------------------------------------------------------------
SELECT SUBJECT, count(*)[Кол-во]
FROM PROGRESS
GROUP BY SUBJECT, NOTE
HAVING NOTE in (8, 9)
ORDER BY SUBJECT;
	